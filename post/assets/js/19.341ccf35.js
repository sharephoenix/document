(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{198:function(e,s,t){"use strict";t.r(s);var a=t(6),n=Object(a.a)({},function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"redis-入门学习"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis-入门学习","aria-hidden":"true"}},[e._v("#")]),e._v(" Redis 入门学习")]),e._v(" "),t("p",[t("a",{attrs:{href:"http://redis.cn/",target:"_blank",rel:"noopener noreferrer"}},[e._v("官网"),t("OutboundLink")],1)]),e._v(" "),t("h2",{attrs:{id:"前提"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前提","aria-hidden":"true"}},[e._v("#")]),e._v(" 前提")]),e._v(" "),t("ul",[t("li",[e._v("安装 Redis")]),e._v(" "),t("li",[e._v("redis-cli 进入 redis 操作界面")])]),e._v(" "),t("h2",{attrs:{id:"支持哪些数据结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#支持哪些数据结构","aria-hidden":"true"}},[e._v("#")]),e._v(" 支持哪些数据结构")]),e._v(" "),t("p",[e._v("字符串（strings）， 散列（hashes）， 列表（lists）， 集合（sets）， 有序集合（sorted sets） 与范围查询， bitmaps， hyperloglogs 和 地理空间（geospatial） 索引半径查询。 Redis 内置了 复制（replication），LUA脚本（Lua scripting）， LRU驱动事件（LRU eviction），事务（transactions） 和不同级别的 磁盘持久化（persistence）， 并通过 Redis哨兵（Sentinel）和自动 分区（Cluster）提供高可用性（high availability)")]),e._v(" "),t("h2",{attrs:{id:"字符串（strings）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符串（strings）","aria-hidden":"true"}},[e._v("#")]),e._v(" 字符串（strings）")]),e._v(" "),t("ul",[t("li",[e._v("简单操作")])]),e._v(" "),t("div",{staticClass:"language-redis extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('127.0.0.1:6379> set name alex\nOK\n127.0.0.1:6379> get name\n"alex"\n127.0.0.1:6379> exists name\n(integer) 1\n127.0.0.1:6379> del name\n(integer) 1\n127.0.0.1:6379> get name\n(nil)\n')])])]),t("ul",[t("li",[e._v("原子递增")])]),e._v(" "),t("div",{staticClass:"language-redis extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('  127.0.0.1:6379> set counter 1\nOK\n127.0.0.1:6379> get counter\n"1"\n127.0.0.1:6379> incr counter\n(integer) 2\n127.0.0.1:6379> get counter\n"2"\n127.0.0.1:6379>\n')])])]),t("ul",[t("li",[e._v("原子递增 10")])]),e._v(" "),t("div",{staticClass:"language-redis extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('127.0.0.1:6379> incrby counter 10\n(integer) 12\n127.0.0.1:6379> get counter\n"12"\n127.0.0.1:6379> \n')])])]),t("ul",[t("li",[e._v("mset mget 多次赋值，多次取值")])]),e._v(" "),t("div",{staticClass:"language-redis extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('127.0.0.1:6379> mset a 1 b 2 c 3\nOK\n127.0.0.1:6379> mget a b c\n1) "1"\n2) "2"\n3) "3"\n127.0.0.1:6379>\n')])])]),t("ul",[t("li",[e._v("获取存储值的类型")])]),e._v(" "),t("div",{staticClass:"language-redis extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("127.0.0.1:6379> type a\nstring\n127.0.0.1:6379> incr a\n(integer) 2\n127.0.0.1:6379> type a\nstring\n127.0.0.1:6379>\n")])])]),t("ul",[t("li",[e._v("expire 设置超时，单位：秒")])]),e._v(" "),t("div",{staticClass:"language-redis extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("127.0.0.1:6379> set a 2\nOK\n127.0.0.1:6379> expire a 3\n(integer) 1\n127.0.0.1:6379> get a\n(nil)\n127.0.0.1:6379>\n")])])]),t("ul",[t("li",[e._v("expire 设置超时")])]),e._v(" "),t("div",{staticClass:"language-redis extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('127.0.0.1:6379> set a 100 ex 5\nOK\n127.0.0.1:6379> get a\n"100"\n127.0.0.1:6379> get a\n(nil)\n127.0.0.1:6379>\n')])])]),t("h2",{attrs:{id:"redis-lists"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis-lists","aria-hidden":"true"}},[e._v("#")]),e._v(" Redis Lists")]),e._v(" "),t("p",[e._v("要说清楚列表数据类型，最好先讲一点儿理论背景，在信息技术界List这个词常常被使用不当。例如”Python Lists”就名不副实（名为Linked Lists），但他们实际上是数组（同样的数据类型在Ruby中叫数组）")]),e._v(" "),t("p",[e._v("一般意义上讲，列表就是有序元素的序列：10,20,1,2,3就是一个列表。但用数组实现的List和用Linked List实现的List，在属性方面大不相同。")]),e._v(" "),t("p",[e._v("Redis lists基于Linked Lists实现。这意味着即使在一个list中有数百万个元素，在头部或尾部添加一个元素的操作，其时间复杂度也是常数级别的。用LPUSH 命令在十个元素的list头部添加新元素，和在千万元素list头部添加新元素的速度相同。")]),e._v(" "),t("p",[e._v("那么，坏消息是什么？在数组实现的list中利用索引访问元素的速度极快，而同样的操作在linked list实现的list上没有那么快。")]),e._v(" "),t("p",[e._v("Redis Lists用linked list实现的原因是：对于数据库系统来说，至关重要的特性是：能非常快的在很大的列表上添加元素。另一个重要因素是，正如你将要看到的：Redis lists能在常数时间取得常数长度。")]),e._v(" "),t("p",[e._v("如果快速访问集合元素很重要，建议使用可排序集合(sorted sets)。可排序集合我们会随后介绍。")]),e._v(" "),t("ul",[t("li",[e._v("lpush rpush lrange 添加 获取 命令")])]),e._v(" "),t("div",{staticClass:"language-redis extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('127.0.0.1:6379> rpush mylist a\n(integer) 1\n127.0.0.1:6379> rpush mylist b\n(integer) 2\n127.0.0.1:6379> lpush mylist first\n(integer) 3\n127.0.0.1:6379> lrange mylist 0 -1\n1) "first"\n2) "a"\n3) "b"\n\n127.0.0.1:6379> del mylist\n(integer) 1\n127.0.0.1:6379> lrange mylist 0 -1\n(empty list or set)\n127.0.0.1:6379> rpush mylist 1 2 3 4 5 "foo bar"\n127.0.0.1:6379> lrange mylist 0 -1\n1) "1"\n2) "2"\n3) "3"\n4) "4"\n5) "5"\n6) "foo bar"\n')])])]),t("ul",[t("li",[e._v("rpop lpop 取出 list 中的值")])]),e._v(" "),t("div",{staticClass:"language-redis extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('127.0.0.1:6379> lpop mylist\n"1"\n127.0.0.1:6379> rpop mylist\n"foo bar"\n127.0.0.1:6379> lrange mylist 0 -1\n1) "2"\n2) "3"\n3) "4"\n4) "5"\n')])])]),t("ul",[t("li",[e._v("获取 list 的长度")])]),e._v(" "),t("div",{staticClass:"language-redis extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('127.0.0.1:6379> lrange mylist 0 -1\n1) "2"\n2) "3"\n3) "4"\n4) "5"\n127.0.0.1:6379> llen mylist\n(integer) 4\n')])])]),t("h2",{attrs:{id:"list-阻塞操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#list-阻塞操作","aria-hidden":"true"}},[e._v("#")]),e._v(" list 阻塞操作")]),e._v(" "),t("p",[e._v("可以使用Redis来实现生产者和消费者模型，如使用LPUSH和RPOP来实现该功能。但会遇到这种情景：list是空，这时候消费者就需要轮询来获取数据，这样就会增加redis的访问压力、增加消费端的cpu时间，而很多访问都是无用的。为此redis提供了阻塞式访问 BRPOP 和 BLPOP 命令。 消费者可以在获取数据时指定如果数据不存在阻塞的时间，如果在时限内获得数据则立即返回，如果超时还没有数据则返回null, 0表示一直阻塞。\n同时redis还会为所有阻塞的消费者以先后顺序排队。\n如需了解详细信息请查看 RPOPLPUSH 和 BRPOPLPUSH。")]),e._v(" "),t("h2",{attrs:{id:"redis-hashes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis-hashes","aria-hidden":"true"}},[e._v("#")]),e._v(" Redis Hashes")]),e._v(" "),t("p",[e._v("值得注意的是，小的 hash 被用特殊方式编码，非常节约内存。")]),e._v(" "),t("ul",[t("li",[e._v("简单操作: hset hget hgetall hmget")])]),e._v(" "),t("div",{staticClass:"language-redis extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('127.0.0.1:6379> hset myhash a 1 b 2 c 3\n(integer) 0\n127.0.0.1:6379> hget myhash a\n"1"\n127.0.0.1:6379> hgetall myhash\n1) "a"\n2) "1"\n3) "b"\n4) "2"\n5) "c"\n6) "3"\n127.0.0.1:6379> hmget myhash a b\n1) "1"\n2) "2"\n')])])]),t("ul",[t("li",[e._v("hincrby")])]),e._v(" "),t("div",{staticClass:"language-redis extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('127.0.0.1:6379> hincrby myhash a 10\n(integer) 11\n127.0.0.1:6379> hget myhash a\n"11"\n')])])]),t("h2",{attrs:{id:"set"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#set","aria-hidden":"true"}},[e._v("#")]),e._v(" set")]),e._v(" "),t("p",[e._v("Redis Set 是 String 的无序排列。SADD 指令把新的元素添加到 set 中。对 set 也可做一些其他的操作，比如测试一个给定的元素是否存在，对不同 set 取交集，并集或差，等等。")]),e._v(" "),t("ul",[t("li",[e._v("简单操作")])]),e._v(" "),t("div",{staticClass:"language-redis extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('127.0.0.1:6379> sadd myset 1 2 34\n(integer) 3\n127.0.0.1:6379> smembers myset\n1) "1"\n2) "2"\n3) "34"\n')])])]),t("ul",[t("li",[e._v("sismember 查看是否存在")])]),e._v(" "),t("div",{staticClass:"language-redis extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('27.0.0.1:6379> smembers myset\n1) "1"\n2) "2"\n3) "34"\n127.0.0.1:6379> sismember myset 1\n(integer) 1\n127.0.0.1:6379> sismember myset 34\n(integer) 1\n127.0.0.1:6379> sismember myset 340\n(integer) 0\n')])])]),t("ul",[t("li",[e._v("使用场景")])]),e._v(" "),t("p",[e._v("Sets 适合用于表示对象间的关系。 例如，我们可以轻易使用 set 来表示标记。")]),e._v(" "),t("p",[e._v("一个简单的建模方式是，对每一个希望标记的对象使用 set。这个 set 包含和对象相关联的标签的 ID。")]),e._v(" "),t("p",[e._v("假设我们想要给新闻打上标签。 假设新闻 ID 1000 被打上了 1,2,5 和 77 四个标签，我们可以使用一个 set 把 tag ID 和新闻条目关联起来：")]),e._v(" "),t("div",{staticClass:"language-redis extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("> sadd news:1000:tags 1 2 5 77\n(integer) 4\n")])])]),t("p",[e._v("或者")]),e._v(" "),t("div",{staticClass:"language-redis extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("> sadd tag:1:news 1000\n(integer) 1\n> sadd tag:2:news 1000\n(integer) 1\n> sadd tag:5:news 1000\n(integer) 1\n> sadd tag:77:news 1000\n(integer) 1\n")])])]),t("ul",[t("li",[e._v("sinter 取交集")])]),e._v(" "),t("div",{staticClass:"language-redis extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('127.0.0.1:6379> smembers myset\n1) "1"\n2) "2"\n3) "34"\n127.0.0.1:6379> sadd myset0 1 6 2 99\n(integer) 4\n127.0.0.1:6379> sinter myset myset0\n1) "1"\n2) "2"\n')])])]),t("ul",[t("li",[e._v("并集")])]),e._v(" "),t("div",{staticClass:"language-redis extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('127.0.0.1:6379> sunionstore myset2 myset0 myset1\n(integer) 5\n127.0.0.1:6379> smembers myset2\n1) "1"\n2) "2"\n3) "3"\n4) "4"\n5) "5"\n127.0.0.1:6379> smembers myset0\n1) "1"\n2) "2"\n3) "3"\n127.0.0.1:6379> smembers myset1\n1) "3"\n2) "4"\n3) "5"\n')])])]),t("h2",{attrs:{id:"时间线"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#时间线","aria-hidden":"true"}},[e._v("#")]),e._v(" 时间线")]),e._v(" "),t("ul",[t("li",[e._v("简单使用")])]),e._v(" "),t("div",{staticClass:"language-redis extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('127.0.0.1:6379> zadd line0 0 "0000"\n(integer) 0\n127.0.0.1:6379> zadd line0 3 "33333"\n(integer) 0\n127.0.0.1:6379> zadd line0 4 "44444"\n(integer) 0\n127.0.0.1:6379> zrange line0 0 -1\n1) "0000"\n2) "33333"\n3) "44444"\n')])])]),t("ul",[t("li",[e._v("倒序获取")])]),e._v(" "),t("div",{staticClass:"language-redis extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('127.0.0.1:6379> zrevrange line0 0 -1\n1) "44444"\n2) "33333"\n3) "0000"\n')])])]),t("ul",[t("li",[e._v("获取值的同时获取权重")])]),e._v(" "),t("div",{staticClass:"language-redis extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('127.0.0.1:6379> zrange line0 0 -1 withscores\n1) "0000"\n2) "0"\n3) "33333"\n4) "3"\n5) "44444"\n6) "4"\n')])])]),t("ul",[t("li",[e._v("过滤 score 权重; -inf 3: score<=3")])]),e._v(" "),t("div",{staticClass:"language-redis extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('127.0.0.1:6379> zrange line0 0 -1 withscores\n1) "0000"\n2) "0"\n3) "33333"\n4) "3"\n5) "44444"\n6) "4"\n127.0.0.1:6379> zrangebyscore line0 -inf 3 withscores\n1) "0000"\n2) "0"\n3) "33333"\n4) "3"\n')])])]),t("ul",[t("li",[e._v("移除 score [0, 3] 之间的数据; zremrangebyscore")])]),e._v(" "),t("div",{staticClass:"language-redis extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("127.0.0.1:6379> zremrangebyscore line0 0 3\n(integer) 2\n")])])]),t("ul",[t("li",[e._v("获取权重 score")])]),e._v(" "),t("div",{staticClass:"language-redis extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('127.0.0.1:6379> zrank line0 111\n(integer) 0\n127.0.0.1:6379> zrank line0 222\n(integer) 1\n127.0.0.1:6379> zrange line0 0 -1 withscores\n1) "111"\n2) "0"\n3) "222"\n4) "1"\n')])])]),t("ul",[t("li",[e._v("zadd 可以插入相同 scroe 的值")])]),e._v(" "),t("div",{staticClass:"language-redis extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('127.0.0.1:6379> zadd line0 0 123\n(integer) 1\n127.0.0.1:6379> zadd line0 0 456\n(integer) 1\n127.0.0.1:6379> zrange line0 0 -1 withscores\n1) "123"\n2) "0"\n3) "456"\n4) "0"\n')])])]),t("h2",{attrs:{id:"pfadd"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pfadd","aria-hidden":"true"}},[e._v("#")]),e._v(" pfadd")]),e._v(" "),t("h2",{attrs:{id:"pfcount"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pfcount","aria-hidden":"true"}},[e._v("#")]),e._v(" pfcount")])])},[],!1,null,null,null);s.default=n.exports}}]);